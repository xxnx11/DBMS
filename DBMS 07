SQL> CREATE TABLE library_audit (
date_modified DATE,
 	book_name VARCHAR2(25),
  	old_status VARCHAR2(15),
  	new_status VARCHAR2(15),
 	action VARCHAR2(25)
 	 );

SQL> CREATE TABLE lib_tab (
  	book_name VARCHAR2(25),
  	status VARCHAR2(15)
 	);

SQL> CREATE OR REPLACE TRIGGER trigger_1
  	AFTER INSERT OR UPDATE OR DELETE ON lib_tab
  	FOR EACH ROW
  	BEGIN
  	IF INSERTING THEN
 	dbms_output.put_line('Inserted status: ' || :NEW.status);
  	INSERT INTO library_audit (date_modified, book_name, old_status, new_status, action)
  	VALUES (SYSDATE, :NEW.book_name, NULL, :NEW.status, 'INSERT');
  
 	ELSIF UPDATING THEN
 	dbms_output.put_line('Updated from ' || :OLD.status || ' to ' || :NEW.status);
 INSERT INTO library_audit (date_modified, book_name, old_status, new_status, action)
 VALUES (SYSDATE, :OLD.book_name, :OLD.status, :NEW.status, 'UPDATE');
 
 	ELSIF DELETING THEN
 	dbms_output.put_line('Deleting book: ' || :OLD.book_name);
 	INSERT INTO library_audit (date_modified, book_name, old_status, new_status, action)
 	VALUES (SYSDATE, :OLD.book_name, :OLD.status, NULL, 'DELETE');
 	END IF;
 	END;
 	/

SQL> INSERT INTO lib_tab VALUES ('DARK MATTER', 'AVAILABLE');

SQL> INSERT INTO lib_tab VALUES ('SILENT HILL', 'UNAVAILABLE');

SQL> INSERT INTO lib_tab VALUES ('GOD OF WAR', 'AVAILABLE');

SQL> INSERT INTO lib_tab VALUES ('SPIDER-MAN', 'UNAVAILABLE');

SQL> INSERT INTO lib_tab VALUES ('UNCHARTED', 'AVAILABLE');

SQL> UPDATE lib_tab SET status = 'UNAVAILABLE' WHERE book_name = 'UNCHARTED';

SQL> DELETE FROM lib_tab WHERE book_name = 'SILENT HILL';

SQL> INSERT INTO lib_tab VALUES ('SPM', 'UNAVAILABLE');

SQL> SELECT * FROM library_audit ORDER BY date_modified DESC;
