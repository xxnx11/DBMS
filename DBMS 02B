Mysql > show databases;

mysql> create database university;

mysql> use university;

mysql> CREATE TABLE students (student_id INT AUTO_INCREMENT PRIMARY KEY,  name VARCHAR(100), email VARCHAR(100) UNIQUE, enrollment_date DATE);

mysql> INSERT INTO students (name, email, enrollment_date) VALUES ('Aman', 'aman@example.com', '2025-08-01'), ('Dhanashree', 'dhanashree@example.com', '2025-08-02'), ('Rohan', 'rohan@example.com', '2025-08-03'), ('Sarvesh', 'sarvesh@example.com', '2025-08-04'), ('Priya', 'priya@example.com', '2025-08-05'), ('Unnati', 'unnati@example.com', '2025-08-06')(‘Kiran’,’kiran@example.com’,’2025-08-07’);

mysql> select * from students;

mysql> CREATE INDEX idx_students_email ON students(email);

mysql> SHOW INDEX FROM students;

mysql> CREATE TABLE instructors (instructor_id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100), department VARCHAR(50) );

mysql> INSERT INTO instructors (name, department) VALUES ('Dr. Mehta', 'Computer Science'),
('Prof. Sharma', 'Electronics'), ('Dr. Iyer', 'Mathematics'), ('Prof. Khan', 'Physics'), ('Dr. Desai', 'Information Technology'),('Prof. Reddy', 'Mechanical Engineering');

mysql> select * from instructors;

mysql> CREATE TABLE courses (course_id INT AUTO_INCREMENT PRIMARY KEY, course_name VARCHAR(100),credits INT);

mysql> INSERT INTO courses (course_name, credits) VALUES ('Database Systems', 4), ('Operating Systems', 3), ('Computer Networks', 3),('Software Engineering', 4), ('Data Structures', 4), ('Machine Learning', 3);

mysql> select * from courses;

mysql> CREATE TABLE enrollments (enrollment_id INT AUTO_INCREMENT PRIMARY KEY,
student_id INT,course_id INT,semester VARCHAR(10),grade DECIMAL(5,2),FOREIGN KEY (student_id) REFERENCES students(student_id),FOREIGN KEY (course_id) REFERENCES courses(course_id));

mysql> INSERT INTO enrollments (student_id, course_id, semester, grade) VALUES(1, 1, 'Sem 3', 88.50), (2, 2, 'Sem 3', 91.00), (3, 3, 'Sem 3', 78.25), (4, 1, 'Sem 3', 85.00), (5, 4, 'Sem 3', 92.75), (6, 2, 'Sem 3', 89.00);

mysql> select * from enrollments;

mysql> CREATE INDEX idx_enrollments_course_id ON enrollments(course_id);

mysql> show index from enrollments;

mysql> CREATE TABLE teaches (  instructor_id INT,course_id INT,PRIMARY KEY (instructor_id, course_id),FOREIGN KEY (instructor_id) REFERENCES instructors(instructor_id),FOREIGN KEY (course_id) REFERENCES courses(course_id));

mysql> INSERT INTO teaches (instructor_id, course_id) VALUES (1, 1), (1, 2), (2, 3), (3, 1), (3, 4); 

mysql> select * from teaches;

mysql> CREATE VIEW student_performance_view AS SELECT s.name AS student_name, c.course_name, e.grade, e.semester  FROM students s JOIN enrollments e ON s.student_id = e.student_id  JOIN courses c ON e.course_id = c.course_id;

mysql> SELECT * FROM student_performance_view;

mysql> CREATE VIEW course_statistics_view AS SELECT c.course_name, COUNT(e.student_id) AS total_students, AVG(e.grade) AS average_grade, MAX(e.grade) AS highest_grade FROM courses c LEFT JOIN enrollments e ON c.course_id = e.course_id GROUP BY  c.course_name;

mysql> SELECT * FROM course_statistics_view;

mysql> SELECT
    c.course_name,
     AVG(e.grade) AS average_grade
     FROM
     courses c
    JOIN enrollments e ON c.course_id = e.course_id
    WHERE
     e.semester = 'Sem 3'
    GROUP BY
    c.course_name;

mysql> SELECT
    s.student_id,
    s.name AS student_name,
    c.course_name,
    e.grade
    FROM
    students s
    JOIN enrollments e ON s.student_id = e.student_id
    JOIN courses c ON e.course_id = c.course_id
    WHERE
    e.grade > 85;

mysql> SELECT
    i.instructor_id,
    i.name AS instructor_name,
    COUNT(t.course_id) AS total_courses
    FROM
    instructors i
    JOIN teaches t ON i.instructor_id = t.instructor_id
    GROUP BY
    i.instructor_id, i.name
    HAVING
    COUNT(t.course_id) > 2;

mysql> SELECT
    s.student_id,
    s.name AS student_name,
    AVG(e.grade) AS average_grade
FROM
    students s
JOIN enrollments e ON s.student_id = e.student_id
GROUP BY
    s.student_id, s.name
ORDER BY
    average_grade DESC
LIMIT 3; 

mysql> SELECT
    s.name AS student_name,
    c.course_name,
    e.semester,
    e.grade
    FROM
    students s
    JOIN enrollments e ON s.student_id = e.student_id
    JOIN courses c ON e.course_id = c.course_id;

mysql> SELECT
    s.name AS student_name,
    c.course_name,
    e.grade
    FROM
    students s
    LEFT JOIN enrollments e ON s.student_id = e.student_id
    LEFT JOIN courses c ON e.course_id = c.course_id;

mysql> SELECT
    i.name AS instructor_name,
    COUNT(t.course_id) AS courses_taught
    FROM
    instructors i
    JOIN teaches t ON i.instructor_id = t.instructor_id
    GROUP BY
    i.name;

mysql> SELECT
    s.name AS student_name,
    c.course_name,
    e.grade
    FROM
    students s
    JOIN enrollments e ON s.student_id = e.student_id
    JOIN courses c ON e.course_id = c.course_id
    WHERE
    e.grade > 85;

mysql> SELECT
    c.course_name
    FROM
    courses c
    LEFT JOIN teaches t ON c.course_id = t.course_id
    WHERE
    t.instructor_id IS NULL;
