SQL> SET SERVEROUTPUT ON;

SQL> SET VERIFY OFF;

SQL> CREATE TABLE stud_marks (
  name VARCHAR2(100),
  total_marks NUMBER
  ); 

SQL> CREATE TABLE result ( 2
  roll NUMBER,
  name VARCHAR2(100),
  class VARCHAR2(30)
  );

SQL> CREATE OR REPLACE PROCEDURE procedure_1 (
  roll_no IN NUMBER,
  name IN VARCHAR2,
  marks IN NUMBER
  ) AS
  BEGIN
  IF marks <= 1500 AND marks >= 990 THEN
  DBMS_OUTPUT.PUT_LINE('DISTINCTION');
  INSERT INTO result VALUES (roll_no, name, 'DISTINCTION');
  
  ELSIF marks <= 989 AND marks >= 900 THEN 
  DBMS_OUTPUT.PUT_LINE('FIRST CLASS');
  INSERT INTO result VALUES (roll_no, name, 'FIRST CLASS');
  
  ELSIF marks <= 899 AND marks > 825 THEN
  DBMS_OUTPUT.PUT_LINE('HIGHER SECOND CLASS');
  INSERT INTO result VALUES (roll_no, name, 'HIGHER SECOND CLASS');
 
  ELSE
  DBMS_OUTPUT.PUT_LINE('FAIL');
  INSERT INTO result VALUES (roll_no, name, 'FAIL');
  END IF;
   
  INSERT INTO stud_marks VALUES (name, marks);
  END procedure_1;
  / 

SQL> CREATE OR REPLACE FUNCTION func_1 (
  r IN NUMBER,
  n IN VARCHAR2,
  m IN NUMBER
  ) RETURN VARCHAR2 AS
  BEGIN
  procedure_1(r, n, m);
  RETURN 'SUCCESSFUL';
  END;
  /



SQL> DECLARE
  name_1 VARCHAR2(25);
  roll_no_1 NUMBER;
  marks_1 NUMBER;
  class VARCHAR2(25);
  BEGIN 
  roll_no_1 := &roll_no_1;
  name_1 := '&name_1';
  marks_1 := &marks_1;

  class := func_1(roll_no_1, name_1, marks_1);
  DBMS_OUTPUT.PUT_LINE('Result: ' || class);
  END;
  / 
