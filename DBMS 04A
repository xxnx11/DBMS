SQL> CREATE TABLE borrower(
  roll_no NUMBER,
  name VARCHAR2(25),
  dateofissue DATE,
  name_of_book VARCHAR2(25),
  status VARCHAR2(20)
  );

SQL> CREATE TABLE Fine(
  roll_no NUMBER,
  date_of_return DATE,
  amt NUMBER
  ); 

SQL> -- Insert sample data

SQL> INSERT INTO borrower VALUES(45,'ASHUTOSH',TO_DATE('01-08-2023','DDMMYYYY'),'HARRY POTTER','PENDING');

SQL> INSERT INTO borrower VALUES(46,'ARYAN',TO_DATE('15-08-2023','DD-MM-YYYY'),'DARK
MATTER','PENDING'); 

SQL> INSERT INTO borrower VALUES(47,'ROHAN',TO_DATE('24-08-2023','DD-MM-YYYY'),'SILENT
HILL','PENDING');

SQL> INSERT INTO borrower VALUES(48,'SANKET',TO_DATE('26-08-2023','DD-MM-YYYY'),'GOD
OF WAR','PENDING');

SQL> INSERT INTO borrower VALUES(49,'SARTHAK',TO_DATE('09-09-2023','DD-MMYYYY'),'SPIDER-MAN','PENDING');

SQL> COMMIT;

SQL> SET SERVEROUT ON
SQL> DECLARE
  i_roll_no NUMBER;
  name_of_book VARCHAR2(25);
  no_of_days NUMBER;
  return_date DATE := SYSDATE;
  temp NUMBER;
  doi DATE;
  fine NUMBER;
  BEGIN
  i_roll_no := &i_roll_no;
  name_of_book := '&nameo ook';
  --dbms_output.put_line(return_date);
  SELECT MAX(b.dateofissue)
  INTO doi
  FROM borrower b
  WHERE b.roll_no = i_roll_no
  AND b.name_of_book = name_of_book;


  no_of_days := TRUNC(return_date - doi);
  dbms_output.put_line('No. of Days: ' || no_of_days); 22
  IF (no_of_days >15 AND no_of_days <=30) THEN
  fine := 5*no_of_days; 
 
  ELSIF (no_of_days>30 ) THEN
  temp := no_of_days-30;
  fine := 150 + temp*50;
  END IF;
  dbms_output.put_line(fine);
  INSERT INTO fine VALUES(i_roll_no,return_date,fine);
  UPDATE borrower SET status = 'RETURNED' WHERE borrower.roll_no = i_roll_no; 33
  
  END;
  / 

SQL> SET SERVEROUT ON

SQL> DECLARE
  i_roll_no NUMBER;
  name_of_book VARCHAR2(25);
  no_of_days NUMBER;
  return_date DATE := SYSDATE;
  temp NUMBER;
  doi DATE;
  fine NUMBER;
  BEGIN
  i_roll_no := &i_roll_no;
  name_of_book := '&nameo ook';
  --dbms_output.put_line(return_date);
  SELECT MAX(b.dateofissue)
  INTO doi
  FROM borrower b
  WHERE b.roll_no = i_roll_no
  AND b.name_of_book = name_of_book;
   
   
  no_of_days := TRUNC(return_date - doi);
  dbms_output.put_line('No. of Days: ' || no_of_days);
 
  IF (no_of_days >15 AND no_of_days <=30) THEN
  fine := 5*no_of_days; 

  ELSIF (no_of_days>30 ) THEN
  temp := no_of_days-30;
  fine := 150 + temp*50;
  END IF;
  dbms_output.put_line(fine);
  INSERT INTO fine VALUES(i_roll_no,return_date,fine);
  UPDATE borrower SET status = 'RETURNED' WHERE borrower.roll_no = i_roll_no;
 
   
  END;
  /
